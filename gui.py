
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

from pathlib import Path
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter as tk
from DbConnectionClass import DatabaseConnection

class LoginFrame(tk.Frame):

    def __init__(self, parent, controller):
        tk.Frame.__init__(self, parent)
        self.controller = controller

        OUTPUT_PATH = Path(__file__).parent
        ASSETS_PATH = OUTPUT_PATH / Path(r"assets\frame0")

        def relative_to_assets(path: str) -> Path:
            return ASSETS_PATH / Path(path)

        controller.geometry("360x800")
        controller.configure(bg = "#373362")

        canvas = Canvas(
            self,
            bg = "#373362",
            height = 800,
            width = 360,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            19.0,
            174.0,
            342.0,
            597.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            58.0,
            288.0,
            anchor="nw",
            text="Username",
            fill="#000000",
            font=("JacquesFrancois Regular", 15 * -1)
        )

        canvas.create_text(
            133.0,
            76.0,
            anchor="nw",
            text="Future Fridgeâ€™s ltd.",
            fill="#FFFFFF",
            font=("JacquesFrancois Regular", 12 * -1)
        )

        canvas.create_text(
            59.0,
            370.0,
            anchor="nw",
            text="Password",
            fill="#000000",
            font=("JacquesFrancois Regular", 15 * -1)
        )

        canvas.create_text(
            150.0,
            199.0,
            anchor="nw",
            text="Login ",
            fill="#000000",
            font=("JacquesFrancois Regular", 24 * -1)
        )

        canvas.create_text(
            168.0,
            42.0,
            anchor="nw",
            text="FF",
            fill="#FFFFFF",
            font=("JacquesFrancois Regular", 24 * -1)
        )

        canvas.create_rectangle(
            58.0,
            334.0,
            290.0,
            335.0,
            fill="#000000",
            outline="")


        username_entry = Entry(canvas)
        canvas.create_window(
            175.0,
            323.0,
            width=230,
            window= username_entry)

        canvas.create_rectangle(
            58.0,
            416.0,
            290.0,
            417.0,
            fill="#000000",
            outline="")

        password_entry = Entry(canvas, show="*")
        canvas.create_window(
            175.0,
            405.0,
            width=230,
            window= password_entry)

        self.button_image_1 = PhotoImage(
            file=r"assets\frame0\button_1.png")
        button_1 = Button(
            canvas,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: [print("button_1 (login_login) clicked"),login_button_event()],
            relief="flat"
        )
        button_1.place(
            x=59.0,
            y=476.0,
            width=231.0,
            height=59.0
        )

        self.button_image_2 = PhotoImage(
            file=r"assets\frame0\button_2.png")
        button_2 = Button(
            canvas,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 (login_help) clicked"),
            relief="flat"
        )
        button_2.place(
            x=302.0,
            y=8.0,
            width=54.0,
            height=34.0
        )

        controller.resizable(False, False)

        def login_button_event():
            username = username_entry.get()
            password = password_entry.get()
            print(f"Username: {username}, Password: {password}")

            db_conn = DatabaseConnection()
            db_conn.connect()
            query = """SELECT COUNT(UserID) FROM Login WHERE Username = %s AND password = %s"""
            query_data = (username, password)
            users_exists_check = db_conn.query(query, query_data)
            db_conn.close()

            print(f"Valid login: {users_exists_check[0][0]}")
            if (str(users_exists_check[0][0]) == "1"):
                db_conn = DatabaseConnection()
                db_conn.connect()
                query = r"""SELECT UserID, AccountType FROM Login WHERE Username = %s"""
                query_data = [username]
                user_details = db_conn.query(query, query_data)
                db_conn.close()
                print(f"Welcome {username}")
                print(f"User details: {user_details}")
                controller.user_id = user_details[0][0]
                controller.account_type = user_details[0][1]
                controller.username = username
                from gui8 import MainMenu
                from gui6 import AdminMenu
                from gui12 import HeadChefMenuChoice
                from gui16 import DeliveryPersonMenu

                if controller.account_type == str("Admin"):
                    controller.show_current_frame(AdminMenu)
                elif controller.account_type == str("HeadChef"):
                    controller.show_current_frame(HeadChefMenuChoice)
                elif controller.account_type == str("DeliveryPerson"):
                    controller.show_current_frame(DeliveryPersonMenu)
                else:
                    controller.show_current_frame(MainMenu)

            else:
                print(f"Invalid credentials, please try again.")
